Algorithm for round- robin scheduling as follows:
Create an array rem_bt[] to keep track of remaining burst time of processes. This array is initially a copy of bt[] (burst times array)
Create another array wt[] to store waiting times of processes. Initialize this array as 0.
Initialize time : t = 0
Keep traversing the all processes while all processes are not done. Do following for i'th process if it is not done yet.
    If rem_bt[i] > quantum
       (i)  t = t + quantum
       (ii) bt_rem[i] -= quantum;
    Else // Last cycle for this process
       (i)  t = t + bt_rem[i];
       (ii) wt[i] = t - bt[i]
       (ii) bt_rem[i] = 0; // This process is over
       
  Once we have waiting times, we can compute turn around time_tat[i] of a process as sum of waiting and burst times, i.e., wt[i] + bt[i].
